{
  "text": "# Google Gen AI SDK ___ Gemini API ___ Google AI for Developers The new Google Gen AI SDK provides a unified interface to Gemini 2.0 through both the Gemini Developer API and Vertex AI (the Gemini Enterprise API). With a few exceptions, code that runs on one platform will run on both. The Gen AI SDK also supports the Gemini 1.5 models. The Google Gen AI SDK for Python is available on PyPI and GitHub. response = client.models.generate_content( model='gemini-2.0-flash', contents='How does RLHF work?' ) print(response.text) response = client.models.generate_content( model='gemini-2.0-flash', contents='How does RLHF work?' ) print(response.text) The Google Gen AI SDK for Go is available on go.dev and GitHub. client, err := genai.NewClient(ctx, &genai.ClientConfig{ APIKey: apiKey, Backend: genai.BackendGeminiAPI, }) client, err := genai.NewClient(ctx, &genai.ClientConfig{ APIKey: apiKey, Backend: genai.BackendGeminiAPI, }) // Call the GenerateContent method result, err := client.Models.GenerateContent(ctx, \"gemini-2.0-flash\", genai.Text(\"How does RLHF work?\"), nil) // Call the GenerateContent method result, err := client.Models.GenerateContent(ctx, \"gemini-2.0-flash\", genai.Text(\"How does RLHF work?\"), nil) The Google Gen AI SDK for Java is available through Maven and GitHub. If you're using Maven, add the following to your dependencies: <dependencies> <dependency> <groupId>com.google.genai</groupId> <artifactId>google-genai</artifactId> <version>0.1.0</version> </dependency> </dependencies> <dependencies> <dependency> <groupId>com.google.genai</groupId> <artifactId>google-genai</artifactId> <version>0.1.0</version> </dependency> </dependencies> import com.google.genai.Client; // The client gets the API key from the environment variable `GOOGLE_API_KEY` Client client = new Client(); // Use the builder class for instantiation. Client client = Client.builder().apiKey(\"your-api-key\").build(); import com.google.genai.Client; // The client gets the API key from the environment variable `GOOGLE_API_KEY` Client client = new Client(); // Use the builder class for instantiation. Client client = Client.builder().apiKey(\"your-api-key\").build(); package <your.pack.name>; import com.google.genai.Client; import com.google.genai.types.GenerateContentResponse; import java.io.IOException; import org.apache.http.HttpException; public class GenerateContentWithTextInput { public static void main(String[] args) throws IOException, HttpException { Client client = new Client(); GenerateContentResponse response = client.models.generateContent(\"gemini-2.0-flash-001\", \"How does RLHF work?\", null); System.out.println(\"Unary response: \" + response.text()); } } package <your.pack.name>; import com.google.genai.Client; import com.google.genai.types.GenerateContentResponse; import java.io.IOException; import org.apache.http.HttpException; public class GenerateContentWithTextInput { public static void main(String[] args) throws IOException, HttpException { Client client = new Client(); GenerateContentResponse response = client.models.generateContent(\"gemini-2.0-flash-001\", \"How does RLHF work?\", null); System.out.println(\"Unary response: \" + response.text()); } } Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0 License, and code samples are licensed under the Apache 2.0 License. For details, see the Google Developers Site Policies. Java is a registered trademark of Oracle and/or its affiliates.",
  "source": "Google Gen AI SDK ___ Gemini API ___ Google AI for Developers.txt",
  "token_count": 829
}